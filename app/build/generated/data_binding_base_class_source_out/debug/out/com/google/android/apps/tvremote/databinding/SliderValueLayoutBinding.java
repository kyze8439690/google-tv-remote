// Generated by view binder compiler. Do not edit!
package com.google.android.apps.tvremote.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import com.google.android.apps.tvremote.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SliderValueLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout captionLayout;

  @NonNull
  public final SeekBar sliderBar;

  @NonNull
  public final TextView sliderCaptionLeft;

  @NonNull
  public final TextView sliderCaptionRight;

  @NonNull
  public final TextView sliderTitle;

  private SliderValueLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout captionLayout, @NonNull SeekBar sliderBar,
      @NonNull TextView sliderCaptionLeft, @NonNull TextView sliderCaptionRight,
      @NonNull TextView sliderTitle) {
    this.rootView = rootView;
    this.captionLayout = captionLayout;
    this.sliderBar = sliderBar;
    this.sliderCaptionLeft = sliderCaptionLeft;
    this.sliderCaptionRight = sliderCaptionRight;
    this.sliderTitle = sliderTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SliderValueLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SliderValueLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.slider_value_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SliderValueLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.caption_layout;
      RelativeLayout captionLayout = ViewBindings.findChildViewById(rootView, id);
      if (captionLayout == null) {
        break missingId;
      }

      id = R.id.slider_bar;
      SeekBar sliderBar = ViewBindings.findChildViewById(rootView, id);
      if (sliderBar == null) {
        break missingId;
      }

      id = R.id.slider_caption_left;
      TextView sliderCaptionLeft = ViewBindings.findChildViewById(rootView, id);
      if (sliderCaptionLeft == null) {
        break missingId;
      }

      id = R.id.slider_caption_right;
      TextView sliderCaptionRight = ViewBindings.findChildViewById(rootView, id);
      if (sliderCaptionRight == null) {
        break missingId;
      }

      id = R.id.slider_title;
      TextView sliderTitle = ViewBindings.findChildViewById(rootView, id);
      if (sliderTitle == null) {
        break missingId;
      }

      return new SliderValueLayoutBinding((RelativeLayout) rootView, captionLayout, sliderBar,
          sliderCaptionLeft, sliderCaptionRight, sliderTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
